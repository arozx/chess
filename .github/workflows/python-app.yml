name: Build and Test with SonarQube Analysis

on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["*"]

jobs:
  build:
    name: Build, Lint, Test, and Analyze
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]
    
    steps:
      # Checkout repository
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Disable shallow clones for better analysis relevance

      # Set up Python
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
      
      # Install dependencies
      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      # Lint code with Ruff
      - name: Lint with Ruff
        run: |
          pip install ruff
          ruff check .
        continue-on-error: true

      # Run tests with pytest
      - name: Test with pytest
        run: |
          pip install tox pytest pytest-cov tornado pycryptodome PyQt5 chess
          sudo apt-get install -y xvfb
          # Run tests with a virtual display for PyQt5 compatibility
          tox

      # SonarQube analysis
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@v3
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      
      # Optional: Fail job if Quality Gate fails
      # - name: SonarQube Quality Gate
      #   uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
